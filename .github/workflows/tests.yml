name: Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0,5 * * *'
  pull_request:
    paths-ignore:
      - 'docs/**'
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  # windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       python-version:
  #         - '3.13'
  #   name: Windows, SQLite, Python ${{ matrix.python-version }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v5
  #     - name: Set up Python
  #       uses: actions/setup-python@v6
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         cache: 'pip'
  #         cache-dependency-path: 'tests/requirements/py3.txt'
  #     - name: Install and upgrade packaging tools
  #       run: python -m pip install --upgrade pip wheel
  #     - run: python -m pip install -r tests/requirements/py3.txt -e .
  #     - name: Run tests
  #       run: python -Wall tests/runtests.py -v2

  javascript-tests:
    runs-on: ubuntu-latest
    name: JavaScript tests
    steps:
      - name: Eco-CI Init
        uses: green-coding-berlin/eco-ci-energy-estimation@main
        with:
          task: start-measurement

      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package.json'
      - run: npm install
      - run: npm test

      - name: Eco-CI Measurement
        uses: green-coding-berlin/eco-ci-energy-estimation@main
        with:
          task: get-measurement
          label: 'npm tests'

      - name: Eco-CI Results
        uses: green-coding-berlin/eco-ci-energy-estimation@main
        with:
          task: display-results
